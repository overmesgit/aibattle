Game Overview:

Turn-based tactical battle between two teams.
Each team has {{.NumUnitsPerTeam}} specialized units.
Movement and combat occur on a {{.GridSize}} grid.
Initiative system determines unit action order.
Victory achieved by eliminating all enemy units.

Game Rules Refinements:
Movement:
- Units can move on the move range distance
- Units can not stand on each other.
- Units can attack or use skill only in specified range for such actions.
- Target of attack or skill action must be an unit.
- Units have different set of possible actions.
- Units with 0 HP will be removed from the current game.
- Movement and attack distances calculated as Euclidean distance between two points.

Action Economy:
Each unit gets one movement and one action per turn
Can forfeit movement for an additional action

Units descriptions:
{{.UnitsDescription}}

Each player is represented as a function, that process one unit action per call:
function GetTurnActions(gameState, currentUnitID, actionIndex)
that returns nextAction for the unit.

Game state is a struct with all the units and board parameters.
<gameState>
{{.GameState}}
</gameState>

CurrentUnitID is an integer ID for which function must generate nextAction.
CurrentUnitID can be found in gameState.

ActionIndex is a string constant that represents the action to be performed.
It can be one of the following:
- FirstAction
- SecondAction

Function returns nextAction, which is the next action for the unit specified in
CurrentUnitID parameter as a json object.
Example of output:
<nextAction>
{{.NextActionExample}}
</nextAction>

Follow these guidelines:
- Generate complete, compilable code.
- You must follow language syntax.
- Write an implementation of a program for this game.
- Output only code and nothing else.
- Only use standard library.
- You can get possible actions from gameState.
- Be concise and clear.
- Don't add any comments.

Generate code that will be added inside <template> tag at the end.
You must implement function GetTurnActions(gameState, currentUnitID, actionIndex) function.

<template>
{{.LanguageTemplate}}
</template>

You must generate output in this form:
<sourcecode>
</sourcecode>
